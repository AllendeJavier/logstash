#Configuration file for sonicwall log
# Version:1.0
input{

# The log was redirect to log (this log is rotate every week)

  file {
        path => ["/var/log/urllogs.log"]
        sincedb_path => "/var/log/logstash/sincedb"
        start_position => "beginning"
        type => "sonicwall"
        }
}

filter{

        if [type]=="sonicwall"{

                 kv {
                        exclude_keys => [ "c", "id", "m", "n", "pri" ]
                }
                #this grok get the Source IP address, Source IP address and the Source Interface
				grok {
				
                        match => [ "src", "%{IP:srcip}:%{NUMBER:srcPort}:(?<srcInterfaz>X[0-9][-]V[0-9]{1,3}|X[0-9])" ]
                }
				#this grok get the Destination IP address, Destination IP address and the Destination Interface
                grok {
                        match => [ "dst", "%{IP:dstip}:%{NUMBER:dstPort}:(?<dstInterfaz>X[0-9][-]V[0-9]{1,3}|X[0-9])" ]
                }
        }
            
		#depends of the interfaz name , I'll generate a new field to conver the sonicwall interface into a understable name
		if "X5-V510" in [srcInterfaz] {   mutate {  add_field => { "nombreInterfazOrigen" => "iface1" }  }         }
         if "X5-V510" in [dstInterfaz]{   mutate { add_field => { "nombreInterfazDestino" => "iface1" }   }         }
         if "X1" in [srcInterfaz] {   mutate {  add_field => { "nombreInterfazOrigen" => "iface2" }  }         }
         if "X1" in [dstInterfaz]{   mutate { add_field => { "nombreInterfazDestino" => "iface2" }   }         }

}

output{
        if [type]=="sonicwall"{
                elasticsearch{
                      index         => "sonic-traffic"
                      document_type => "sonicwall"
                      template_overwrite => true
                      template      => "/etc/logstash/sonic-traffic.json"
                }
        }#end sonic

}#Output
